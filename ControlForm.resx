<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>