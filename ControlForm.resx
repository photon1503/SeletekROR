<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>